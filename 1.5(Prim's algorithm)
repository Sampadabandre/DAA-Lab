#include <stdio.h>
		{
			key[i]=INT_MAX,mstSet[i]=false;
		}
	key[0]=0;
	parent[0]=-1;
		for(int c=0;c<vertices-1;c++)
			{
				int u= minKey(key,mstSet,vertices);
				mstSet[u]=true;
				for(int v=0;v<vertices;v++)
					{
						if(graph[u][v] &&  !mstSet[v] && graph[u][v] < key[v])
							parent[v]=u, key[v]=graph[u][v];
					}
				
			}
	printTree(parent, graph, vertices);
	
	
}

int main() {
    int vertices;
    int graph[V][V];

    printf("No of vertices: ");
    scanf("%d", &vertices);

    printf("Adjacency matrix elements (row wise):\n");
    for (int i = 0; i < vertices; i++) {
        for (int j = 0; j < vertices; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    prim(graph, vertices);

    return 0;
}
